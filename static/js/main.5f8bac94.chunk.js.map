{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","WelcomeScreen.jsx","mock-data.js","api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","state","hidden","toggleClass","currentState","setState","event","this","props","dateString","Object","values","start","displayStartTime","slice","eventDescription","description","eventLink","htmlLink","group","organizer","className","summary","location","href","onClick","Component","EventList","events","map","id","Alert","getStyle","color","getType","type","style","text","InfoAlert","ErrorAlert","CitySearch","query","suggestions","showSuggestions","undefined","infoText","handleInputChanged","value","target","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","NumberOfEvents","updateEvents","navigator","onLine","onChange","onFocus","errorText","handleLimitChanged","lettersOrNegative","RegExp","console","log","test","updateNumberOfEvents","mounted","NumberofEvents","e","WelcomeScreen","showWelcomeScreen","align","class","src","alt","getAccessToken","rel","mockData","extractLocations","Set","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","getEvents","NProgress","window","startsWith","done","data","localStorage","getItem","JSON","parse","token","removeQuery","url","axios","get","setItem","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","code","results","authUrl","getToken","history","pushState","pathname","newurl","protocol","host","encodeCode","encodeURIComponent","access_token","App","searchLocation","numberOfEvents","eventCount","locationEvents","limit","parseInt","getData","number","city","split","shift","isTokenValid","ResponsiveContainer","height","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","dataKey","name","YAxis","Tooltip","cursor","strokeDasharray","Scatter","fill","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5f8bac94.chunk.js","sourcesContent":["// src/Event.js\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n\r\n  state = {\r\n    hidden: true\r\n  }\r\n\r\n  toggleClass = () => {\r\n    const currentState = this.state.hidden\r\n    this.setState({ hidden: !currentState });\r\n  }\r\n\r\n  render() {\r\n    const { event } = this.props;\r\n    // How to handle difference in timezone?\r\n    // Ignoring this issue for now.\r\n\r\n    // Example Data from API Call: 2020-05-19T16:00:00+02:00\r\n    // Using German standard for date display currently YYYY-MM-DD for simplicity\r\n    const dateString = Object.values(event.start)[0];\r\n    const startHour = dateString.slice(11, 16);\r\n    const startYearMonthDay = dateString.slice(0, 10);\r\n    const displayStartTime = startHour + \" - \" + startYearMonthDay;\r\n\r\n    const eventDescription = Object.values(event.description)\r\n    const eventLink = Object.values(event.htmlLink)\r\n\r\n    // This is the e-mail value of the event organizer\r\n    const group = Object.values(event.organizer)[0];\r\n\r\n    return <div className=\"event\">\r\n      <div className=\"details-collapsed\">\r\n        <p className=\"time\">{displayStartTime}</p>\r\n        <p className=\"title\">{event.summary} | {event.location}</p>\r\n        {/* Unclear what Group should pull from in MockData, going to use Organizer: Email for now */}\r\n        <p className=\"group\">{group}</p>\r\n        {/* There is no data on number of attendees in MockData */}\r\n        <p className=\"attendee-count\">Attendees: Count</p>\r\n      </div>\r\n      {/* <div className={this.state.hidden ? \"details-expanded hidden\" : \"details-expanded\"}> */}\r\n      {!this.state.hidden &&\r\n        <div className=\"details-expanded\">\r\n          <p className=\"location\">ADDRESS TO GO HERE</p>\r\n          <p className=\"description\">{eventDescription}</p>\r\n          <p className=\"public\">public</p>\r\n          <a className=\"event-link\" href={eventLink}>Google Event</a>\r\n        </div>\r\n      }\r\n      <button\r\n        className=\"details-button\"\r\n        onClick={this.toggleClass}\r\n      >\r\n        Details\r\n      </button>\r\n    </div>;\r\n  }\r\n}\r\n\r\nexport default Event;","// src/EventList.js\r\n\r\n// Main Imports\r\nimport React, { Component } from \"react\";\r\n\r\n// Components\r\nimport Event from \"./Event\";\r\n\r\nclass EventList extends Component {\r\n  render() {\r\n    const { events } = this.props;\r\n    return (\r\n      <ul className=\"EventList\">\r\n        {events.map(event =>\r\n          <li key={event.id}>\r\n            <Event event={event} />\r\n          </li>\r\n        )}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n    this.type = null;\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  getType = () => {\r\n    return {\r\n      type: this.type,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.getType().type}>\r\n        <div style={this.getStyle()}>{this.props.text}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n    this.type = 'infoAlert'\r\n  }\r\n}\r\n\r\n// class WarningAlert extends Alert {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.color = 'orange';\r\n//   }\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n    this.type = 'errorAlert';\r\n  }\r\n}\r\n\r\nexport {\r\n  InfoAlert\r\n  // ,WarningAlert\r\n  , ErrorAlert\r\n};","// src/CitySearch.js\r\n\r\n// Main Imports\r\n// import { set } from \"nprogress\";\r\nimport React, { Component } from \"react\";\r\nimport { InfoAlert } from './Alert';\r\n// import NumberOfEvents from \"./NumberOfEvents\";\r\n\r\nclass CitySearch extends Component {\r\n\r\n  state = {\r\n    query: \"\",\r\n    suggestions: [],\r\n    showSuggestions: undefined,\r\n    infoText: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!navigator.onLine) {\r\n      return this.setState({\r\n        infoText: 'Events shown may not be up to date as you are offline. Please connect to enable searching.'\r\n      })\r\n    }\r\n  }\r\n\r\n  handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    const suggestions = this.props.locations.filter((location) => {\r\n      return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n    });\r\n    if (suggestions.length === 0) {\r\n      this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: 'We cannot find the city you are looking for. Please try again.'\r\n      })\r\n    } else {\r\n      return this.setState({\r\n        query: value,\r\n        suggestions,\r\n        infoText: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  handleItemClicked = (suggestion, NumberOfEvents) => {\r\n    this.setState({\r\n      query: suggestion,\r\n      suggestions: [],\r\n      showSuggestions: false,\r\n      infoText: ''\r\n    });\r\n\r\n    // Update the state \"events\" in <App />\r\n    this.props.updateEvents(suggestion, NumberOfEvents);\r\n  }\r\n\r\n  // Need a way to make sure that \"See All Cities\" and other suggestions do not appear at launch\r\n  render() {\r\n    return (\r\n      <div className=\"CitySearch\">\r\n        <InfoAlert text={this.state.infoText} />\r\n        <div>City to Search:</div>\r\n        {!navigator.onLine &&\r\n          <input\r\n            type=\"text\"\r\n            className=\"city\"\r\n            value={\"Searching is disabled while offline\"}\r\n          />}\r\n        {navigator.onLine &&\r\n          <input\r\n            type=\"text\"\r\n            className=\"city\"\r\n            value={this.state.query}\r\n            onChange={this.handleInputChanged}\r\n            onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n          />}\r\n        <ul className={this.state.showSuggestions ? \"suggestions\" : \"suggestions hidden\"}>\r\n          {this.state.suggestions.map((suggestion) => (\r\n            <li\r\n              key={suggestion}\r\n              onClick={() => this.handleItemClicked(suggestion, this.props.NumberOfEvents)}\r\n            >\r\n              {suggestion}\r\n            </li>\r\n          ))}\r\n          <li key=\"all\" onClick={() => this.handleItemClicked(\"all\", this.props.NumberOfEvents)}\r\n          // className=\"hidden\"\r\n          >\r\n            <b>See All Cities</b>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CitySearch;","// src/NumberOfEvents.js\r\n\r\n// Main Imports\r\nimport React, { Component } from \"react\";\r\nimport { ErrorAlert } from './Alert';\r\n\r\n// Components\r\n\r\nclass NumberOfEvents extends Component {\r\n\r\n  state = {\r\n    // // limit: 32,\r\n    // limit: this.props.NumberofEvents ? this.props.NumberofEvents : 32,\r\n    errorText: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n    this.props.updateNumberOfEvents(this.props.NumberofEvents)\r\n  }\r\n\r\n  handleLimitChanged = (event) => {\r\n    const value = event.target.value;\r\n    const lettersOrNegative = new RegExp(/^\\d+$/)\r\n    console.log(value);\r\n    if (value.length > 0 && !lettersOrNegative.test(value)) {\r\n      this.setState({\r\n        errorText: 'Select a positive integer.'\r\n      })\r\n    } else {\r\n      this.setState({\r\n        // limit: value,\r\n        errorText: ''\r\n      });\r\n    }\r\n    // Update the state \"NumberOfEvents\" in <App />\r\n    this.props.updateNumberOfEvents(value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ErrorAlert text={this.state.errorText} />\r\n        <div>Number of Events: </div>\r\n        <input\r\n          type=\"text\"\r\n          value={this.props.NumberofEvents}\r\n          className=\"limit\"\r\n          onChange={(e) => this.handleLimitChanged(e)}\r\n        // onChange={(e) => this.props.updateNumberOfEvents(e.target.value)}\r\n        />\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default NumberOfEvents;","import React from \"react\";\r\nimport './WelcomeScreen.css';\r\nfunction WelcomeScreen(props) {\r\n  return props.showWelcomeScreen ?\r\n    (\r\n      <div className=\"WelcomeScreen\">\r\n        <h1>Welcome to the Meet app</h1>\r\n        <h4>\r\n          Log in to see upcoming events around the world for full-stack developers\r\n        </h4>\r\n        <div className=\"button_cont\" align=\"center\">\r\n          <div class=\"google-btn\">\r\n            <div class=\"google-icon-wrapper\">\r\n              <img\r\n                class=\"google-icon\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                alt=\"Google sign-in\"\r\n              />\r\n            </div>\r\n            <button onClick={() => { props.getAccessToken() }}\r\n              rel=\"nofollow noopener\"\r\n              class=\"btn-text\"\r\n            >\r\n              <b>Sign in with google</b>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <a\r\n          href=\"https://LukeHTHompson.github.io/meet/privacy.html\"\r\n          rel=\"nofollow noopener\"\r\n        >\r\n          Privacy policy\r\n        </a>\r\n      </div>\r\n    )\r\n    : null\r\n}\r\nexport default WelcomeScreen;\r\n","// src/mock-data.js\r\n\r\nconst mockData = [\r\n  // Event 1\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181161784712000\\\"\",\r\n    \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:17:46.000Z\",\r\n    \"updated\": \"2020-05-27T12:01:32.356Z\",\r\n    \"summary\": \"Learn JavaScript\",\r\n    \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\r\n    \"location\": \"London, UK\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-19T17:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-19T16:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  },\r\n  // Event 2\r\n  {\r\n    \"kind\": \"calendar#event\",\r\n    \"etag\": \"\\\"3181159875584000\\\"\",\r\n    \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\r\n    \"status\": \"confirmed\",\r\n    \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\r\n    \"created\": \"2020-05-19T19:14:30.000Z\",\r\n    \"updated\": \"2020-05-27T11:45:37.792Z\",\r\n    \"summary\": \"React is Fun\",\r\n    \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\r\n    \"location\": \"Berlin, Germany\",\r\n    \"creator\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"organizer\": {\r\n      \"email\": \"fullstackwebdev@careerfoundry.com\",\r\n      \"self\": true\r\n    },\r\n    \"start\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"end\": {\r\n      \"dateTime\": \"2020-05-20T15:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\r\n    \"originalStartTime\": {\r\n      \"dateTime\": \"2020-05-20T14:00:00+02:00\",\r\n      \"timeZone\": \"Europe/Berlin\"\r\n    },\r\n    \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\r\n    \"sequence\": 0,\r\n    \"reminders\": {\r\n      \"useDefault\": true\r\n    },\r\n    \"eventType\": \"default\"\r\n  }\r\n];\r\n\r\n// mockData = JSON.parse(JSON.stringify(mockData));\r\n\r\nexport { mockData };","// Main Imports\r\nimport { mockData } from \"./mock-data\";\r\nimport axios from \"axios\";\r\nimport NProgress from \"nprogress\";\r\n\r\n/*\r\n  This function takes an events array, then uses map to create a new array with only locations.\r\n  It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n  The Set will remove all duplicates from the array.\r\n*/\r\n\r\nexport const extractLocations = (events) => {\r\n  var extractLocations = events.map((event) => event.location);\r\n  var locations = [...new Set(extractLocations)];\r\n  return locations;\r\n};\r\n\r\n\r\nexport const checkToken = async (accessToken) => {\r\n  const result = await fetch(\r\n    `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n  )\r\n    .then((res) => res.json())\r\n    .catch((error) => error.json());\r\n\r\n  return result;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  NProgress.start();\r\n\r\n  // LocalHost app returns the mock data\r\n  if (window.location.href.startsWith(\"http://localhost\")) {\r\n    NProgress.done();\r\n    return mockData;\r\n  }\r\n\r\n\r\n  if (!navigator.onLine) {\r\n    const data = localStorage.getItem(\"lastEvents\");\r\n    NProgress.done();\r\n    return data ? JSON.parse(data).events : [];\r\n  }\r\n\r\n  const token = await getAccessToken();\r\n\r\n  if (token) {\r\n    removeQuery();\r\n    const url = 'https://6iiyeovdya.execute-api.us-east-1.amazonaws.com/dev/api/get-events/' + token;\r\n    const result = await axios.get(url);\r\n    if (result.data) {\r\n      var locations = extractLocations(result.data.events);\r\n      localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n      localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n    }\r\n    NProgress.done();\r\n    return result.data.events;\r\n  }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n  const accessToken = localStorage.getItem('access_token');\r\n  const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n  if (!accessToken || tokenCheck.error) {\r\n    await localStorage.removeItem(\"access_token\");\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = await searchParams.get(\"code\");\r\n    if (!code) {\r\n      const results = await axios.get(\r\n        \"https://6iiyeovdya.execute-api.us-east-1.amazonaws.com/dev/api/get-auth-url\"\r\n      );\r\n      const { authUrl } = results.data;\r\n      return (window.location.href = authUrl);\r\n    }\r\n    return code && getToken(code);\r\n  }\r\n  return accessToken;\r\n}\r\n\r\nconst removeQuery = () => {\r\n  if (window.history.pushState && window.location.pathname) {\r\n    var newurl =\r\n      window.location.protocol +\r\n      \"//\" +\r\n      window.location.host +\r\n      window.location.pathname;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  } else {\r\n    newurl = window.location.protocol + \"//\" + window.location.host;\r\n    window.history.pushState(\"\", \"\", newurl);\r\n  }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n  const encodeCode = encodeURIComponent(code);\r\n  const { access_token } = await fetch(\r\n    'https://6iiyeovdya.execute-api.us-east-1.amazonaws.com/dev/api/token/' + encodeCode\r\n  )\r\n    .then((res) => {\r\n      return res.json();\r\n    })\r\n    .catch((error) => error);\r\n\r\n  access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n  return access_token;\r\n};\r\n\r\n// export const extractTimes = (events) => {\r\n//   var extractStartTimes = events.map((event) => event.start.dateTime)\r\n//   var extractEndTimes = events.map((event) => event.end.dateTime)\r\n//   var extractTimeZones = events.map((event) => event.start.timeZone)\r\n//   var times = [...{ start: extractStartTimes, end: extractEndTimes, zone: extractTimeZones }]\r\n//   return times\r\n// }","// src/App.js\r\n\r\n// Main Imports\r\nimport React, { Component } from \"react\";\r\nimport { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\r\n\r\n// Components\r\nimport EventList from \"./EventList\";\r\nimport CitySearch from \"./CitySearch\";\r\nimport NumberOfEvents from \"./NumberOfEvents\";\r\nimport WelcomeScreen from \"./WelcomeScreen\";\r\n\r\n// Styling\r\nimport \"./App.css\";\r\nimport './nprogress.css';\r\n\r\n// Other\r\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    events: [],\r\n    locations: [],\r\n    searchLocation: 'all',\r\n    numberOfEvents: 32,\r\n    showWelcomeScreen: undefined\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.mounted = true;\r\n    let accessToken = localStorage.getItem('access_token');\r\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\r\n    const searchParams = new URLSearchParams(window.location.search);\r\n    const code = searchParams.get(\"code\");\r\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n    if ((code || isTokenValid) && this.mounted) {\r\n      getEvents().then((events) => {\r\n        if (this.mounted) {\r\n          this.setState({\r\n            events,\r\n            locations: extractLocations(events),\r\n            numberOfEvents: this.state.numberOfEvents ? this.state.numberOfEvents : 32\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.mounted = false;\r\n  }\r\n\r\n  updateEvents = (location = null, eventCount = null) => {\r\n    getEvents().then((events) => {\r\n      // Check if the location parameter passed in was \"all\" or something else\r\n      // location = location ? location : \"all\";\r\n      if (location) {\r\n        this.setState({\r\n          searchLocation: location\r\n        });\r\n      } else {\r\n        this.setState({\r\n          searchLocation: \"all\"\r\n        });\r\n      }\r\n      location = this.state.searchLocation;\r\n\r\n      const locationEvents =\r\n        location === \"all\"\r\n          // If location = \"all\" then DO NOT filter events before setting state below\r\n          ? events\r\n          // If location != \"all\" then DO filter events before setting state below\r\n          : events.filter((event) => event.location === location);\r\n\r\n      this.setState({\r\n        // searchLocation: location,\r\n        events: locationEvents.slice(\r\n          0,\r\n          eventCount ? eventCount : this.state.numberOfEvents\r\n        )\r\n      });\r\n    });\r\n  };\r\n\r\n  updateNumberOfEvents = (limit) => {\r\n    // Perform checks and handling for limit <= 0\r\n    // Should only allow positive integers for limit (with a minimum 1?)\r\n    const searchLocation = this.state.searchLocation ? this.state.searchLocation : \"all\"\r\n    if (limit === undefined || limit === '' || limit < 0) {\r\n      this.setState({\r\n        numberOfEvents: 32\r\n      });\r\n      this.updateEvents(searchLocation, 32)\r\n\r\n    } else if (limit !== undefined && limit !== '' && limit > 0) {\r\n      this.setState({\r\n        numberOfEvents: parseInt(limit, 10)\r\n      });\r\n      this.updateEvents(searchLocation, limit)\r\n    }\r\n  }\r\n\r\n  getData = () => {\r\n    console.log('chart: ', this.state);\r\n    const { locations, events } = this.state;\r\n    const data = locations.map((location) => {\r\n      const number = events.filter((event) => event.location === location).length\r\n      const city = location.split(', ').shift()\r\n      return { city, number };\r\n    })\r\n    return data;\r\n  };\r\n\r\n  render() {\r\n    if (this.state.showWelcomeScreen === undefined) return <div className=\"App\" />\r\n    const { locations, numberOfEvents, events } = this.state;\r\n    // if (events.length !== numberOfEvents) return <div className=\"App\" />\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <h1>Meet App</h1> */}\r\n        <CitySearch locations={locations} updateEvents={this.updateEvents} numberOfEvents={numberOfEvents} />\r\n        <NumberOfEvents numberOfEvents={numberOfEvents} updateNumberOfEvents={this.updateNumberOfEvents} />\r\n        {/* CHART START */}\r\n        <ResponsiveContainer height={400}>\r\n          <ScatterChart margin={{ top: 20, right: 20, bottom: 20, left: 20 }} >\r\n            <CartesianGrid />\r\n            <XAxis type=\"category\" dataKey=\"city\" name=\"city\" />\r\n            <YAxis type=\"number\" dataKey=\"number\" name=\"number of events\" />\r\n            <Tooltip cursor={{ strokeDasharray: '3 3' }} />\r\n            <Scatter data={this.getData()} fill=\"#8884d8\" />\r\n          </ScatterChart>\r\n        </ResponsiveContainer>\r\n        {/* CHART END */}\r\n        <EventList events={events} />\r\n        <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen} getAccessToken={() => { getAccessToken() }} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\natatus.config('eb8baee199c5492b934e437b2573835d').install();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n// serviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n// This line was being used to throw an error manually as confirmation that the atatus tracking had succeeded\r\n// atatus.notify(new Error('Test Atatus Setup'));"],"sourceRoot":""}